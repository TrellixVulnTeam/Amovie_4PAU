{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\AddNews.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container, Grid, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNews() {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(addNewsSchema)\n  });\n\n  const onSubmit = async values => {\n    console.log(values);\n    const url = \"http://localhost:7063/api/register\";\n    const data = {\n      title: values.title,\n      image: values.image,\n      content: values.content,\n      date: values.date,\n      authorId: values.authorId\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const json = (await response).json();\n      console.log(\"Succes:\", JSON.stringify(json));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/news\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          ...register(\"title\", {})\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: \"#F95252\"\n          },\n          children: [\"* \", errors.title.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNews, \"tcOw/nnJ9gfxYEFfcugkxE1a1n8=\", false, function () {\n  return [useForm];\n});\n\n_c = AddNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/AddNews.tsx"],"names":["yupResolver","Container","Grid","TextField","Typography","useState","useForm","Redirect","addNewsSchema","AddNews","redirect","setRedirect","register","handleSubmit","formState","errors","resolver","onSubmit","values","console","log","url","data","title","image","content","date","authorId","response","fetch","method","body","JSON","stringify","headers","json","error","mt","color","message"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\n\ntype NewsType = {\n  title: string;\n  image: string;\n  content: string;\n  date: string;\n  authorId: number;\n};\n\nexport default function AddNews() {\n  const [redirect, setRedirect] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<NewsType>({ resolver: yupResolver(addNewsSchema) });\n\n  const onSubmit = async (values: NewsType) => {\n    console.log(values);\n\n    const url = \"http://localhost:7063/api/register\";\n    const data = {\n      title: values.title,\n      image: values.image,\n      content: values.content,\n      date: values.date,\n      authorId: values.authorId,\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const json = (await response).json();\n      console.log(\"Succes:\", JSON.stringify(json));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/news\" />;\n  }\n\n  return (\n    <Container>\n       <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} sx={{ mt: 3 }}>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          {...register(\"title\", {})}\n        />\n        {errors.title && (\n          <Typography style={{ color: \"#F95252\" }}>\n            * {errors.title.message}\n          </Typography>\n        )}\n      </Grid>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}