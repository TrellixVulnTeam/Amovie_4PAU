{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\UpdateNews.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container, Grid, TextField, Typography, Box, Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport useFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateNews() {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState(null);\n  const [news, setNews] = useState(null);\n  const newsUrl = \"http://localhost:7063/api/news/\" + window.location.pathname.substring(window.location.pathname.lastIndexOf(\"/\") + 1); // const { data: updateNews } = useFetch<NewsType>(newsUrl);\n  // console.log(updateNews?.title);\n\n  const url = `http://localhost:7063/api/Author/allauthors`;\n  const {\n    data: authors\n  } = useFetch(url);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(addNewsSchema)\n  });\n\n  const onSubmit = async values => {\n    const url = `http://localhost:7063/api/${44}`;\n    const data = {\n      title: values.title,\n      image: values.image[0].name,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId\n    };\n\n    try {\n      await fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      reset();\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/news\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      sx: {\n        display: \"block\",\n        mt: 4,\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          display: \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"title\",\n            label: \"Title\",\n            defaultValue: \"\",\n            ...register(\"title\", {})\n          }, \"OKAYG_\" + (10000 + Math.random() * (1000000 - 10000)), false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.title.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"content\",\n            multiline: true,\n            minRows: 3,\n            label: \"News content\",\n            ...register(\"content\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.content.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"file\",\n            ...register(\"image\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"choose-file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), errors.image && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.image.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"News Date\",\n              value: dateValue,\n              onChange: newValue => {\n                setDateValue(newValue);\n              },\n              renderInput: register => /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                ...register,\n                name: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), errors.date && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.date.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              variant: \"standard\",\n              htmlFor: \"uncontrolled-native\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n              defaultValue: 30,\n              ...register(\"authorId\"),\n              children: authors && (authors === null || authors === void 0 ? void 0 : authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: author.id,\n                children: [author.firstName.concat(\" \"), author.lastName]\n              }, author.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), errors.authorId && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.authorId.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            ml: 2\n          },\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateNews, \"q0A2kfqU6LnqYkNYIFkVnLZTdGQ=\", false, function () {\n  return [useFetch, useForm];\n});\n\n_c = UpdateNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/UpdateNews.tsx"],"names":["yupResolver","Container","Grid","TextField","Typography","Box","Button","useState","useForm","Redirect","addNewsSchema","AdapterDateFns","LocalizationProvider","DatePicker","moment","InputLabel","FormControl","NativeSelect","useFetch","UpdateNews","redirect","setRedirect","dateValue","setDateValue","news","setNews","newsUrl","window","location","pathname","substring","lastIndexOf","url","data","authors","register","handleSubmit","reset","formState","errors","resolver","onSubmit","values","title","image","name","content","date","format","authorId","fetch","method","body","JSON","stringify","headers","error","console","display","mt","mb","Math","random","color","message","newValue","map","author","id","firstName","concat","lastName","ml"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Container,\n  Grid,\n  TextField,\n  Typography,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport useFetch from \"../hooks/useFetch\";\nimport { AuthorType, NewsType } from \"../Types/Types\";\n\nexport default function UpdateNews() {\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState<Date | null>(null);\n  const [news, setNews] = useState(null);\n\n  const newsUrl =\n    \"http://localhost:7063/api/news/\" +\n    window.location.pathname.substring(\n      window.location.pathname.lastIndexOf(\"/\") + 1\n    );\n\n  // const { data: updateNews } = useFetch<NewsType>(newsUrl);\n  // console.log(updateNews?.title);\n\n\n  const url = `http://localhost:7063/api/Author/allauthors`;\n  const { data: authors } = useFetch<AuthorType[]>(url);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<NewsType>({ resolver: yupResolver(addNewsSchema) });\n\n  const onSubmit = async (values: any) => {\n    const url = `http://localhost:7063/api/${44}`;\n    const data = {\n      title: values.title,\n      image: values.image[0].name,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId,\n    };\n    try {\n      await fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      reset();\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/news\" />;\n  }\n  return (\n    <Container>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(onSubmit)}\n        sx={{ display: \"block\", mt: 4, mb: 4 }}\n      >\n        <Grid container spacing={2} sx={{ display: \"block\" }}>\n          <Grid item xs={6}>\n            <TextField\n              key={\"OKAYG_\" + (10000 + Math.random() * (1000000 - 10000))}\n              fullWidth\n              id=\"title\"\n              label={\"Title\"}\n              defaultValue={\"\"}\n              {...register(\"title\", {})}\n            />\n            {errors.title && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.title.message}\n              </Typography>\n            )}\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"content\"\n              multiline\n              minRows={3}\n              label=\"News content\"\n              {...register(\"content\", {})}\n            />\n            {errors.content && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.content.message}\n              </Typography>\n            )}\n          </Grid>\n\n          <Grid item xs={6} md={3}>\n            <TextField fullWidth type=\"file\" {...register(\"image\")}></TextField>\n            <label htmlFor=\"choose-file\"></label>\n            {errors.image && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.image.message}\n              </Typography>\n            )}\n          </Grid>\n\n          <Grid item xs={6} md={3}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"News Date\"\n                value={dateValue}\n                onChange={(newValue) => {\n                  setDateValue(newValue);\n                }}\n                renderInput={(register) => (\n                  <TextField fullWidth {...register} name=\"date\" />\n                )}\n              />\n            </LocalizationProvider>\n            {errors.date && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.date.message}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={3}>\n            <FormControl fullWidth>\n              <InputLabel\n                variant=\"standard\"\n                htmlFor=\"uncontrolled-native\"\n              ></InputLabel>\n              <NativeSelect defaultValue={30} {...register(\"authorId\")}>\n                {authors &&\n                  authors?.map((author) => (\n                    <option key={author.id} value={author.id}>\n                      {author.firstName.concat(\" \")}\n                      {author.lastName}\n                    </option>\n                  ))}\n              </NativeSelect>\n            </FormControl>\n            {errors.authorId && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.authorId.message}\n              </Typography>\n            )}\n          </Grid>\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, ml: 2 }}>\n            Save changes\n          </Button>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}