{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\AddNews.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container, Grid, TextField, Typography, Box, Button } from \"@mui/material\";\nimport { Fragment, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNews() {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(addNewsSchema)\n  });\n\n  const onSubmit = async values => {\n    const url = \"http://localhost:7063/addnews\";\n    const data = {\n      title: values.title,\n      image: values.image[0].name,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId\n    };\n    console.log(data);\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const result = await response.json();\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/news\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit(onSubmit),\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"title\",\n              label: \"News title\",\n              ...register(\"title\", {})\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), errors.title && /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: \"#F95252\"\n              },\n              children: [\"* \", errors.title.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ...register(\"image\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), errors.image && /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: \"#F95252\"\n              },\n              children: [\"* \", errors.image.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"content\",\n              label: \"News content\",\n              ...register(\"content\", {})\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), errors.content && /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: \"#F95252\"\n              },\n              children: [\"* \", errors.content.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"News Date\",\n                value: dateValue,\n                onChange: newValue => {\n                  setDateValue(newValue);\n                },\n                renderInput: register => /*#__PURE__*/_jsxDEV(TextField, { ...register,\n                  name: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"authorId\",\n              label: \"Author id\",\n              ...register(\"authorId\", {})\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), errors.authorId && /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: \"#F95252\"\n              },\n              children: [\"* \", errors.authorId.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              ml: 2\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNews, \"TnqdSmlYls6rt8Db/DPlxHf0SRQ=\", false, function () {\n  return [useForm];\n});\n\n_c = AddNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/AddNews.tsx"],"names":["yupResolver","Container","Grid","TextField","Typography","Box","Button","Fragment","useState","useForm","Redirect","addNewsSchema","AdapterDateFns","LocalizationProvider","DatePicker","moment","AddNews","redirect","setRedirect","dateValue","setDateValue","register","handleSubmit","formState","errors","resolver","onSubmit","values","url","data","title","image","name","content","date","format","authorId","console","log","response","fetch","method","body","JSON","stringify","headers","result","json","error","mt","color","message","newValue","ml"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Container,\n  Grid,\n  TextField,\n  Typography,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { Fragment, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\n\ntype NewsType = {\n  title: string;\n  image: string;\n  content: string;\n  date: string;\n  authorId: number;\n};\n\nexport default function AddNews() {\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState<Date | null>(null);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<NewsType>({ resolver: yupResolver(addNewsSchema) });\n\n  const onSubmit = async (values: any) => {\n    const url = \"http://localhost:7063/addnews\";\n    const data = {\n      title: values.title,\n      image: values.image[0].name,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId,\n    };\n    console.log(data);\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const result = await response.json();\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/news\" />;\n  }\n\n  return (\n    <Fragment>\n      <Container>\n        <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <TextField\n                fullWidth\n                id=\"title\"\n                label=\"News title\"\n                {...register(\"title\", {})}\n              />\n              {errors.title && (\n                <Typography style={{ color: \"#F95252\" }}>\n                  * {errors.title.message}\n                </Typography>\n              )}\n            </Grid>\n            <Grid item xs={6}>\n              <input type=\"file\" {...register(\"image\")}></input>\n              {errors.image && (\n                <Typography style={{ color: \"#F95252\" }}>\n                  * {errors.image.message}\n                </Typography>\n              )}\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                fullWidth\n                id=\"content\"\n                label=\"News content\"\n                {...register(\"content\", {})}\n              />\n              {errors.content && (\n                <Typography style={{ color: \"#F95252\" }}>\n                  * {errors.content.message}\n                </Typography>\n              )}\n            </Grid>\n\n            <Grid item xs={6}>\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  label=\"News Date\"\n                  value={dateValue}\n                  onChange={(newValue) => {\n                    setDateValue(newValue);\n                  }}\n                  renderInput={(register) => (\n                    <TextField {...register} name=\"date\" />\n                  )}\n                />\n              </LocalizationProvider>\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                fullWidth\n                id=\"authorId\"\n                label=\"Author id\"\n                {...register(\"authorId\", {})}\n              />\n              {errors.authorId && (\n                <Typography style={{ color: \"#F95252\" }}>\n                  * {errors.authorId.message}\n                </Typography>\n              )}\n            </Grid>\n            <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, ml: 2 }}>\n              Sign Up\n            </Button>\n          </Grid>\n        </Box>\n      </Container>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}