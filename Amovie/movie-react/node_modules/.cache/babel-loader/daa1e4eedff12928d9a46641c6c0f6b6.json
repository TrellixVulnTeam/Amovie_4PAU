{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport default function useFetch(url) {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchPosts() {\n      const response = await fetch(url);\n      setLoading(false);\n      var result;\n\n      if (isJson(response)) {\n        result = await response.json();\n      }\n\n      if (response.status === 404) {\n        result = {\n          error404: 'Resourse not found'\n        };\n      } else {\n        result = result || {\n          error: \"Somthing went wrong\"\n        };\n      }\n\n      if (response.status >= 200 && response.status < 300) {// setData(result);\n      } else {\n        setError(result);\n      }\n    }\n\n    fetchPosts();\n  }, [url, data]);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\n_s(useFetch, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n\nfunction isJson(response) {\n  var _response$headers$get;\n\n  return (_response$headers$get = response.headers.get(\"Content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"json\");\n}","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/hooks/useFetch.tsx"],"names":["useEffect","useState","useFetch","url","data","setData","loading","setLoading","error","setError","fetchPosts","response","fetch","result","isJson","json","status","error404","headers","get","includes"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAA+BC,GAA/B,EAA4C;AAAA;;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAW,IAAX,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACb,mBAAeU,UAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAIM,MAAJ;;AACA,UAAGC,MAAM,CAACH,QAAD,CAAT,EAAoB;AACnBE,QAAAA,MAAM,GAAG,MAAMF,QAAQ,CAACI,IAAT,EAAf;AACA;;AACD,UAAGJ,QAAQ,CAACK,MAAT,KAAoB,GAAvB,EAA2B;AACzBH,QAAAA,MAAM,GAAG;AAACI,UAAAA,QAAQ,EAAE;AAAX,SAAT;AACD,OAFD,MAEM;AACJJ,QAAAA,MAAM,GAAGA,MAAM,IAAI;AAACL,UAAAA,KAAK,EAAE;AAAR,SAAnB;AACD;;AAED,UAAGG,QAAQ,CAACK,MAAT,IAAmB,GAAnB,IAA0BL,QAAQ,CAACK,MAAT,GAAkB,GAA/C,EAAmD,CACjD;AACD,OAFD,MAEM;AACJP,QAAAA,QAAQ,CAACI,MAAD,CAAR;AACD;AACF;;AACDH,IAAAA,UAAU;AACX,GArBQ,EAqBN,CAACP,GAAD,EAAMC,IAAN,CArBM,CAAT;AAuBA,SAAQ;AAACA,IAAAA,IAAD;AAAME,IAAAA,OAAN;AAAeE,IAAAA;AAAf,GAAR;AACD;;GA7BuBN,Q;;AA+BxB,SAASY,MAAT,CAAgBH,QAAhB,EAAoC;AAAA;;AAClC,kCAAOA,QAAQ,CAACO,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAP,0DAAO,sBAAsCC,QAAtC,CAA+C,MAA/C,CAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function useFetch<T = unknown>(url: string) {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() =>{\n    async function fetchPosts(){\n      const response = await fetch(url);\n      setLoading(false);\n      var result;\n      if(isJson(response)){\n       result = await response.json();\n      }\n      if(response.status === 404){\n        result = {error404: 'Resourse not found'};\n      } else{\n        result = result || {error: \"Somthing went wrong\"};\n      }\n\n      if(response.status >= 200 && response.status < 300){\n        // setData(result);\n      } else{\n        setError(result);\n      }\n    }\n    fetchPosts();\n  }, [url, data]);\n  \n  return ({data,loading, error});\n}\n\nfunction isJson(response: Response) {\n  return response.headers.get(\"Content-type\")?.includes(\"json\");\n}\n"]},"metadata":{},"sourceType":"module"}