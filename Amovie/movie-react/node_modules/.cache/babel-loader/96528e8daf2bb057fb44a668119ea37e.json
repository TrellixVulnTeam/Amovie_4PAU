{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\MovieComponent\\\\AllMovies.tsx\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch\";\nimport \"../../styles/movies.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllMovies() {\n  _s();\n\n  var _data$movies;\n\n  const [page, setPage] = useState(1); // const [movies, setMovies] = useState(null);\n\n  const url = `http://localhost:7063/pagedmovies/${page}?pageSize=${12}`;\n  const {\n    data,\n    error,\n    loading\n  } = useFetch(url);\n  console.log(data); // useEffect(() => {\n  //   const fetchPost = async () => {\n  //     const response = await fetch(url);\n  //     const data = await response.json();\n  //     setMovies(data);\n  //   };\n  //   fetchPost();\n  // }, []);\n  // console.log(movies);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blue-line\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), data && (data === null || data === void 0 ? void 0 : (_data$movies = data.movies) === null || _data$movies === void 0 ? void 0 : _data$movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movies/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `./images/${movie.image}`,\n              alt: \"movie img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-rating\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: moment(movie.release).format(\"YYYY\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [movie.duration, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", \"IMDb \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: movie.rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))), error && JSON.stringify(error)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllMovies, \"9hQ1v7vLQd7bjrA810+1bGETDKc=\", false, function () {\n  return [useFetch];\n});\n\n_c = AllMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMovies\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/MovieComponent/AllMovies.tsx"],"names":["moment","useState","Link","useFetch","AllMovies","page","setPage","url","data","error","loading","console","log","movies","map","movie","id","image","title","release","format","duration","rating","JSON","stringify"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch\";\nimport \"../../styles/movies.scss\";\nimport { MoviesPage } from \"../../Types/Types\";\n\nexport default function AllMovies() {\n  const [page, setPage] = useState(1);\n  // const [movies, setMovies] = useState(null);\n  const url = `http://localhost:7063/pagedmovies/${page}?pageSize=${12}`;\n  const {\n    data,\n    error,\n    loading\n  } = useFetch<MoviesPage[]>(url);\n  console.log(data);\n\n  // useEffect(() => {\n  //   const fetchPost = async () => {\n  //     const response = await fetch(url);\n  //     const data = await response.json();\n  //     setMovies(data);\n  //   };\n  //   fetchPost();\n  // }, []);\n  // console.log(movies);\n  \n  return (\n    <div className=\"container\">\n      <div className=\"movies-title\">\n        <div className=\"title-block\">\n          <p className=\"title\">Movies</p>\n          <div className=\"blue-line\">\n            <div> </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"movies-container\">\n        {loading && <p>Loading data...</p>}\n        {data &&\n          data?.movies?.map((movie) => (\n            <div className=\"movie\" key={movie.id}>\n              <div className=\"image\">\n                <Link to={`/movies/${movie.id}`}>\n                  <img src={`./images/${movie.image}`} alt=\"movie img\" />\n                </Link>\n              </div>\n              <div className=\"content\">\n                <div className=\"title-rating\">\n                  <h2>{movie.title}</h2>\n                </div>\n                <div className=\"date\">\n                  <div>\n                    <span className=\"dot\"></span>\n                    <p>{moment(movie.release).format(\"YYYY\")}</p>\n                  </div>\n                  <div>\n                    <span className=\"dot\"></span>\n                    <p>{movie.duration} min</p>\n                  </div>\n                  <div>\n                    <span className=\"dot\"></span>\n                    <p>\n                      {\" \"}\n                      IMDb <span>{movie.rating}</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        {error && JSON.stringify(error)}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}