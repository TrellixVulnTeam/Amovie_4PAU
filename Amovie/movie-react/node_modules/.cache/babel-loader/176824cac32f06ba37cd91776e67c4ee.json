{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function DeleteNews(id) {\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n  // useEffect(() => {\n  //   fetch(`http://localhost:7063/api/deletenews/${id}`, { \n  //     method: \"DELETE\" })\n  //     .then(async (response) => {\n  //       const data = await response.json();\n  //       if (!response.ok) {\n  //         // get error message from body or default to response status\n  //         const error = (data && data.message) || response.status;\n  //         return Promise.reject(error);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       setErrorMessage(error);\n  //       console.error(\"There was an error!\", error);\n  //     });\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = DeleteNews;\n\nfunction setErrorMessage(error) {\n  alert(error);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/DeleteNews.tsx"],"names":["DeleteNews","id","setErrorMessage","error","alert"],"mappings":";;AAEA,OAAO,eAAeA,UAAf,CAA0BC,EAA1B,EAAsC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,qCADF;AAGD;KAxBqBD,U;;AAyBtB,SAASE,eAAT,CAAyBC,KAAzB,EAAwC;AACtCC,EAAAA,KAAK,CAACD,KAAD,CAAL;AACD","sourcesContent":["import { useEffect } from \"react\";\n\nexport async function DeleteNews(id: number) {\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n  // useEffect(() => {\n  //   fetch(`http://localhost:7063/api/deletenews/${id}`, { \n  //     method: \"DELETE\" })\n  //     .then(async (response) => {\n  //       const data = await response.json();\n  //       if (!response.ok) {\n  //         // get error message from body or default to response status\n  //         const error = (data && data.message) || response.status;\n  //         return Promise.reject(error);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       setErrorMessage(error);\n  //       console.error(\"There was an error!\", error);\n  //     });\n  // }, []);\n\n  return(\n    <></>\n  )\n}\nfunction setErrorMessage(error: string) {\n  alert(error);\n}\n"]},"metadata":{},"sourceType":"module"}