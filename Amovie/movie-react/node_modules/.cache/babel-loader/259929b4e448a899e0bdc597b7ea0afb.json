{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\AddNews.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container, Grid, TextField, Typography, Box, Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNews() {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(addNewsSchema)\n  });\n\n  const onSubmit = async values => {\n    const url = \"http://localhost:7063/addnews\";\n    const data = {\n      title: values.title,\n      image: values.date,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId\n    };\n    console.log(data);\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const json = response.json();\n      console.log(\"Succes:\", JSON.stringify(json));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/news\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"title\",\n            label: \"News title\",\n            ...register(\"title\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.title.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"image\",\n            label: \"News image\",\n            ...register(\"image\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), errors.image && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.image.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"content\",\n            label: \"News content\",\n            ...register(\"content\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.content.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"News Date\",\n              value: dateValue,\n              onChange: newValue => {\n                setDateValue(newValue);\n              },\n              renderInput: register => /*#__PURE__*/_jsxDEV(TextField, { ...register,\n                name: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"authorId\",\n            label: \"Author id\",\n            ...register(\"authorId\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), errors.authorId && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.authorId.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            ml: 2\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNews, \"TnqdSmlYls6rt8Db/DPlxHf0SRQ=\", false, function () {\n  return [useForm];\n});\n\n_c = AddNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/AddNews.tsx"],"names":["yupResolver","Container","Grid","TextField","Typography","Box","Button","useState","useForm","Redirect","addNewsSchema","AdapterDateFns","LocalizationProvider","DatePicker","moment","AddNews","redirect","setRedirect","dateValue","setDateValue","register","handleSubmit","formState","errors","resolver","onSubmit","values","url","data","title","image","date","content","format","authorId","console","log","response","fetch","method","body","JSON","stringify","headers","json","error","mt","color","message","newValue","ml"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  FormHelperText,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\n\ntype NewsType = {\n  title: string;\n  image: string;\n  content: string;\n  date: string;\n  authorId: number;\n};\n\nexport default function AddNews() {\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState<Date | null>(null);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<NewsType>({ resolver: yupResolver(addNewsSchema) });\n\n  const onSubmit = async (values: any) => {\n\n    const url = \"http://localhost:7063/addnews\";\n    const data = {\n      title: values.title,\n      image: values.date,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId,\n    };\n    console.log(data);\n\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const json = response.json();\n      console.log(\"Succes:\", JSON.stringify(json));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/news\" />;\n  }\n\n  return (\n    <Container>\n      <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} sx={{ mt: 3 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"title\"\n              label=\"News title\"\n              {...register(\"title\", {})}\n            />\n            {errors.title && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.title.message}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"image\"\n              label=\"News image\"\n              {...register(\"image\", {})}\n            />\n            {errors.image && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.image.message}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"content\"\n              label=\"News content\"\n              {...register(\"content\", {})}\n            />\n            {errors.content && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.content.message}\n              </Typography>\n            )}\n          </Grid>\n\n          <Grid item xs={6}>\n            {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"News Date\"\n                inputFormat=\"MM/dd/yyyy\"\n                value={dateValue}\n                onChange={(newValue) => {\n                  setDateValue(newValue);\n                }}\n                renderInput={(register) => <TextField {...register} name='date' />}\n              />\n            </LocalizationProvider> */}\n\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"News Date\"\n                value={dateValue}\n                onChange={(newValue) => {\n                  setDateValue(newValue);\n                }}\n                renderInput={(register) => (\n                  <TextField {...register} name=\"date\" />\n                )}\n              />\n            </LocalizationProvider>\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"authorId\"\n              label=\"Author id\"\n              {...register(\"authorId\", {})}\n            />\n            {errors.authorId && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.authorId.message}\n              </Typography>\n            )}\n          </Grid>\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, ml: 2 }}>\n            Sign Up\n          </Button>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}