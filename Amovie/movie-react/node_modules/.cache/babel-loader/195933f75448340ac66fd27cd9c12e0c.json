{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DeleteNews(id) {\n  _s();\n\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n  const [page, setPage] = useState(1);\n\n  function defFunc() {\n    fetch(`http://localhost:7063/api/deletenews/${id}`, {\n      method: \"DELETE\"\n    }).then(async response => {\n      if (!response.ok) {\n        const error = response.status;\n        return Promise.reject(error);\n      }\n    }).catch(error => {\n      console.warn(\"There was an error!\", error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(DeleteNews, \"/DWZXlUKUNETkaaw7t58aXy53hg=\");\n\n_c = DeleteNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/DeleteNews.tsx"],"names":["useState","DeleteNews","id","page","setPage","defFunc","fetch","method","then","response","ok","error","status","Promise","reject","catch","console","warn"],"mappings":";;AAAA,SAAoBA,QAApB,QAAoC,OAApC;;;AAGA,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAgC;AAAA;;AACrC;AACA;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;;AACE,WAASK,OAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAE,wCAAuCJ,EAAG,EAA5C,EAA+C;AAClDK,MAAAA,MAAM,EAAE;AAD0C,KAA/C,CAAL,CAGGC,IAHH,CAGQ,MAAOC,QAAP,IAAoB;AACxB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAEhB,cAAMC,KAAK,GAAGF,QAAQ,CAACG,MAAvB;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD;AACF,KATH,EAUGI,KAVH,CAUUJ,KAAD,IAAW;AAChBK,MAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCN,KAApC;AACD,KAZH;AAaD;;AAEH,sBAAO,qCAAP;AACD;;GAtBeV,U;;KAAAA,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\n\nexport function DeleteNews(id: number) {\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n  const [page, setPage] = useState(1);\n    function defFunc() {\n      fetch(`http://localhost:7063/api/deletenews/${id}`, {\n        method: \"DELETE\",\n      })\n        .then(async (response) => {\n          if (!response.ok) {\n\n            const error = response.status;\n            return Promise.reject(error);\n          }\n        })\n        .catch((error) => {\n          console.warn(\"There was an error!\", error);\n        });\n    }\n\n  return <></>;\n}\n"]},"metadata":{},"sourceType":"module"}