{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\SingIn.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Container from '@mui/material/Container';\nimport { Avatar, Box, Button, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { loginSchema } from '../validations/loginValidation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(loginSchema)\n  });\n\n  const onSubmit = async (values, e) => {\n    e.target.reset();\n    console.log(values);\n    const url = \"https://localhost:7063/api/register\";\n    const data = {\n      name: values.name,\n      email: values.email,\n      password: values.password\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = (await response).json();\n      console.log('Succes:', JSON.stringify(json));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        marginBottom: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'primary.main'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"Sign in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit(onSubmit),\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          required: true,\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"remember\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 40\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \" Sign In \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: [\" \", \"Don't have an account? Sign Up\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SignIn, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/SingIn.tsx"],"names":["React","Container","Avatar","Box","Button","Checkbox","FormControlLabel","Grid","TextField","Typography","Link","useForm","yupResolver","loginSchema","SignIn","register","handleSubmit","formState","errors","resolver","onSubmit","values","e","target","reset","console","log","url","data","name","email","password","response","fetch","method","body","JSON","stringify","headers","json","error","marginTop","marginBottom","display","flexDirection","alignItems","m","bgcolor","fontWeight","mt","mb"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Container from '@mui/material/Container';\nimport { Avatar, Box, Button, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { loginSchema } from '../validations/loginValidation';\n\nexport default function SignIn() {\n\n  type loginType = {\n    email: string;\n    password: string;\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<loginType>({ resolver: yupResolver(loginSchema) });\n\n  const onSubmit = async (values: FormTypes, e: any) => {\n    e.target.reset();\n    console.log(values);\n    \n    const url = \"https://localhost:7063/api/register\";\n    const data = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST', \n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = (await response).json();\n      console.log('Succes:', JSON.stringify(json));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Box sx={{ marginTop: 8, marginBottom: 8, display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}></Avatar>\n          <Typography component=\"h1\" variant=\"h5\" sx={{ fontWeight: 'bold' }}>Sign in </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\"/>}label=\"Remember me\"/>\n            <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}> Sign In </Button>\n\n            <Grid container>\n              <Grid item>\n                <Link to={\"/signup\"}> {\"Don't have an account? Sign Up\"} </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}