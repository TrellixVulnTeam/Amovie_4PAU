{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nexport function DeleteNews(id) {\n  _s();\n\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n  useEffect(() => {\n    function defFunc() {\n      fetch(`http://localhost:7063/api/deletenews/${id}`, {\n        method: \"DELETE\"\n      }).then(async response => {\n        if (!response.ok) {\n          const error = response.status;\n          return Promise.reject(error);\n        }\n      }).catch(error => {\n        console.warn(\"There was an error!\", error);\n      });\n    }\n\n    defFunc();\n  }, [id]);\n}\n\n_s(DeleteNews, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DeleteNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/DeleteNews.tsx"],"names":["useEffect","DeleteNews","id","defFunc","fetch","method","then","response","ok","error","status","Promise","reject","catch","console","warn"],"mappings":";;AAAA,SAASA,SAAT,QAAoC,OAApC;AAIA,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAgC;AAAA;;AACrC;AACA;AACA;AAEAF,EAAAA,SAAS,CAAC,MAAI;AAEZ,aAASG,OAAT,GAAmB;AACjBC,MAAAA,KAAK,CAAE,wCAAuCF,EAAG,EAA5C,EAA+C;AAClDG,QAAAA,MAAM,EAAE;AAD0C,OAA/C,CAAL,CAGGC,IAHH,CAGQ,MAAOC,QAAP,IAAoB;AACxB,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,gBAAMC,KAAK,GAAGF,QAAQ,CAACG,MAAvB;AACA,iBAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD;AACF,OARH,EASGI,KATH,CASUJ,KAAD,IAAW;AAChBK,QAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCN,KAApC;AACD,OAXH;AAYD;;AACDN,IAAAA,OAAO;AACR,GAjBQ,EAiBP,CAACD,EAAD,CAjBO,CAAT;AAmBD;;GAxBeD,U;;KAAAA,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport { NewsPage } from \"../Types/Types\";\n\nexport function DeleteNews(id: number) {\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n\n  useEffect(()=>{\n\n    function defFunc() {\n      fetch(`http://localhost:7063/api/deletenews/${id}`, {\n        method: \"DELETE\",\n      })\n        .then(async (response) => {\n          if (!response.ok) {\n            const error = response.status;\n            return Promise.reject(error);\n          }\n        })\n        .catch((error) => {\n          console.warn(\"There was an error!\", error);\n        });\n    }\n    defFunc();\n  },[id])\n\n}\n"]},"metadata":{},"sourceType":"module"}