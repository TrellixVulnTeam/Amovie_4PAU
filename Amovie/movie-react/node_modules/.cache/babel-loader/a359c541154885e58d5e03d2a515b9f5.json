{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function DeleteNews(id) {\n  _s();\n\n  const [test, setTest] = useState(\"Hello\");\n\n  async function defFunc() {\n    await fetch(`http://localhost:7063/api/deletenews/${id}`, {\n      method: \"DELETE\"\n    }).then(async response => {\n      if (!response.ok) {\n        const error = response.status;\n        return Promise.reject(error);\n      }\n    }).catch(error => {\n      console.warn(\"There was an error!\", error);\n    });\n    console.log(test);\n  }\n\n  defFunc();\n}\n\n_s(DeleteNews, \"y5f+cKDW3WWtfeU/Mno91bv9iX0=\");\n\n_c = DeleteNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/DeleteNews.tsx"],"names":["useState","DeleteNews","id","test","setTest","defFunc","fetch","method","then","response","ok","error","status","Promise","reject","catch","console","warn","log"],"mappings":";;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AAIA,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAgC;AAAA;;AAErC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,OAAD,CAAhC;;AAGE,iBAAeK,OAAf,GAAyB;AACvB,UAAMC,KAAK,CAAE,wCAAuCJ,EAAG,EAA5C,EAA+C;AACxDK,MAAAA,MAAM,EAAE;AADgD,KAA/C,CAAL,CAGHC,IAHG,CAGE,MAAOC,QAAP,IAAoB;AACxB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAMC,KAAK,GAAGF,QAAQ,CAACG,MAAvB;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD;AACF,KARG,EASHI,KATG,CASIJ,KAAD,IAAW;AAChBK,MAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCN,KAApC;AACD,KAXG,CAAN;AAYEK,IAAAA,OAAO,CAACE,GAAR,CAAYf,IAAZ;AACH;;AACDE,EAAAA,OAAO;AACV;;GArBeJ,U;;KAAAA,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useFetch from \"../hooks/useFetch\";\nimport { NewsPage } from \"../Types/Types\";\n\nexport function DeleteNews(id: number) {\n\n  const [test, setTest] = useState(\"Hello\");\n\n\n    async function defFunc() {\n      await fetch(`http://localhost:7063/api/deletenews/${id}`, {\n        method: \"DELETE\",\n      })\n        .then(async (response) => {\n          if (!response.ok) {\n            const error = response.status;\n            return Promise.reject(error);\n          }\n        })\n        .catch((error) => {\n          console.warn(\"There was an error!\", error);\n        });\n        console.log(test);\n    }\n    defFunc();\n}\n"]},"metadata":{},"sourceType":"module"}