{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\providers\\\\UserProvider.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsingFetch = () => {\n  _s();\n\n  const [name, setName] = useState([]);\n\n  const fetchData = () => {\n    fetch(\"http://localhost:7063/api/user\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include'\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setName(data.name);\n      console.log(data.name);\n    });\n  };\n};\n\n_s(UsingFetch, \"GhzQPMEudadSs7EQUPaoLGOfUfk=\");\n\n_c = UsingFetch;\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport default function UserProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\n_c2 = UserProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UsingFetch\");\n$RefreshReg$(_c2, \"UserProvider\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/providers/UserProvider.tsx"],"names":["React","createContext","useState","UsingFetch","name","setName","fetchData","fetch","headers","credentials","then","response","json","data","console","log","UserContext","UserProvider","children","user","setUser"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA0CC,QAA1C,QAA0D,OAA1D;;;AAUA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAC,gCAAD,EAAkC;AACrCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAD4B;AAErCC,MAAAA,WAAW,EAAE;AAFwB,KAAlC,CAAL,CAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KANH,EAOGF,IAPH,CAOQG,IAAI,IAAI;AACZR,MAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACT,IAAjB;AACD,KAVH;AAWD,GAZD;AAaD,CAhBD;;GAAMD,U;;KAAAA,U;AAkBN,OAAO,MAAMa,WAAW,gBAAGf,aAAa,CAAkB,IAAlB,CAAjC;AAEP,eAAe,SAASgB,YAAT,OAA6D;AAAA;;AAAA,MAAvC;AAAEC,IAAAA;AAAF,GAAuC;AAC1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAc,IAAd,CAAhC;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEiB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAA7B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAPuBD,Y;;MAAAA,Y","sourcesContent":["import React, { createContext, ReactNode, useState } from \"react\";\n\ntype User = {\n  name: string;\n};\n\ntype UserContextType = {\n  user: User | null;\n  setUser: React.Dispatch<React.SetStateAction<User | null>>;\n};\nconst UsingFetch = () => {\n  const [name, setName] = useState([])\n\n  const fetchData = () => {\n    fetch(\"http://localhost:7063/api/user\",{\n      headers: {\"Content-Type\": \"application/json\"},\n      credentials: 'include',\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setName(data.name)\n        console.log(data.name);\n      })\n  }\n}\n\nexport const UserContext = createContext<UserContextType>(null!);\n\nexport default function UserProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}