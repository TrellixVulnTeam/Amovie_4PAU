{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nexport async function DeleteNews(id) {\n  _s();\n\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n  useEffect(() => {\n    fetch(`http://localhost:7063/api/deletenews/${id}`, {\n      method: \"DELETE\"\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n}\n\n_s(DeleteNews, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DeleteNews;\n\nfunction setErrorMessage(error) {\n  alert(error);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/DeleteNews.tsx"],"names":["useEffect","DeleteNews","id","fetch","method","then","response","data","json","ok","error","message","status","Promise","reject","catch","setErrorMessage","console","alert"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,eAAeC,UAAf,CAA0BC,EAA1B,EAAsC;AAAA;;AAC3C;AACA;AACA;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAAE,wCAAuCD,EAAG,EAA5C,EAA+C;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAA/C,CAAL,CACGC,IADH,CACQ,MAAOC,QAAP,IAAoB;AACxB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB,CADwB,CAGxB;;AACA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChB;AACA,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BL,QAAQ,CAACM,MAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD;AACF,KAVH,EAWGK,KAXH,CAWUL,KAAD,IAAW;AAChBM,MAAAA,eAAe,CAACN,KAAD,CAAf;AACAO,MAAAA,OAAO,CAACP,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,KAdH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAiBD;;GArBqBT,U;;KAAAA,U;;AAsBtB,SAASe,eAAT,CAAyBN,KAAzB,EAAwC;AACtCQ,EAAAA,KAAK,CAACR,KAAD,CAAL;AACD","sourcesContent":["import { useEffect } from \"react\";\n\nexport async function DeleteNews(id: number) {\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n  useEffect(() => {\n    fetch(`http://localhost:7063/api/deletenews/${id}`, { method: \"DELETE\" })\n      .then(async (response) => {\n        const data = await response.json();\n\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n      })\n      .catch((error) => {\n        setErrorMessage(error);\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n}\nfunction setErrorMessage(error: string) {\n  alert(error);\n}\n"]},"metadata":{},"sourceType":"module"}