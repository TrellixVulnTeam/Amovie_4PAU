{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nexport async function DeleteNews(id) {\n  _s();\n\n  await fetch(`http://localhost:7063/api/deletenews/${id}`, {\n    method: 'DELETE'\n  });\n  useEffect(() => {\n    // DELETE request using fetch with error handling\n    fetch('https://jsonplaceholder.typicode.com/invalid-url', {\n      method: 'DELETE'\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error('There was an error!', error);\n    });\n  }, []);\n}\n\n_s(DeleteNews, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DeleteNews;\n\nfunction setErrorMessage(error) {\n  alert(error);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/DeleteNews.tsx"],"names":["useEffect","DeleteNews","id","fetch","method","then","response","data","json","ok","error","message","status","Promise","reject","catch","setErrorMessage","console","alert"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,eAAeC,UAAf,CAA0BC,EAA1B,EAAqC;AAAA;;AAC1C,QAAMC,KAAK,CAAE,wCAAuCD,EAAG,EAA5C,EAA8C;AACvDE,IAAAA,MAAM,EAAE;AAD+C,GAA9C,CAAX;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAArD,CAAL,CACKC,IADL,CACU,MAAMC,QAAN,IAAkB;AACpB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB,CADoB,CAGpB;;AACA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AACd;AACA,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BL,QAAQ,CAACM,MAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;AACJ,KAVL,EAWKK,KAXL,CAWWL,KAAK,IAAI;AACZM,MAAAA,eAAe,CAACN,KAAD,CAAf;AACAO,MAAAA,OAAO,CAACP,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAdL;AAeH,GAjBU,EAiBR,EAjBQ,CAAT;AAkBD;;GAtBqBT,U;;KAAAA,U;;AAuBtB,SAASe,eAAT,CAAyBN,KAAzB,EAAwC;AACtCQ,EAAAA,KAAK,CAACR,KAAD,CAAL;AACD","sourcesContent":["import { useEffect } from \"react\";\n\nexport async function DeleteNews(id:number) {\n  await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n    method: 'DELETE'\n  }) \n  useEffect(() => {\n    // DELETE request using fetch with error handling\n    fetch('https://jsonplaceholder.typicode.com/invalid-url', { method: 'DELETE' })\n        .then(async response => {\n            const data = await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n        })\n        .catch(error => {\n            setErrorMessage(error);\n            console.error('There was an error!', error);\n        });\n}, []); \n}\nfunction setErrorMessage(error: string) {\n  alert(error)\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}