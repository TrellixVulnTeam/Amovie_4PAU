{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\MovieComponent\\\\AddReview.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Box, Grid, TextField, Typography, Button } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { addReviewSchema } from \"../../validations/addReviewValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddReview() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(addReviewSchema)\n  });\n\n  const onSubmit = async values => {\n    console.log(\"Hello\");\n    const url = \"http://localhost:7063/api/addreview\";\n    const data = {\n      user: \"Gheorghe\",\n      content: values.content,\n      movieId: 1\n    };\n\n    try {\n      await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    sx: {\n      display: \"block\",\n      mt: 4,\n      mb: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        display: \"block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"Content\",\n          label: \"Review content\",\n          ...register(\"content\", {})\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), errors.content && /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            color: \"#F95252\"\n          },\n          children: [\"* \", errors.content.message ? true : false]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          ml: 2\n        },\n        children: \"Add review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddReview, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/MovieComponent/AddReview.tsx"],"names":["yupResolver","Box","Grid","TextField","Typography","Button","useForm","addReviewSchema","AddReview","register","handleSubmit","formState","errors","resolver","onSubmit","values","console","log","url","data","user","content","movieId","fetch","method","body","JSON","stringify","headers","error","display","mt","mb","color","message","ml"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,MALF,QAMO,eANP;AAOA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,eAAT,QAAgC,uCAAhC;;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAC1B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFN,OAAO,CAAS;AAAEO,IAAAA,QAAQ,EAAEb,WAAW,CAACO,eAAD;AAAvB,GAAT,CAJX;;AAMA,QAAMO,QAAQ,GAAG,MAAOC,MAAP,IAAuB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,UAAMC,GAAG,GAAG,qCAAZ;AACA,UAAMC,IAAI,GAAG;AACXC,MAAAA,IAAI,EAAE,UADK;AAEXC,MAAAA,OAAO,EAAEN,MAAM,CAACM,OAFL;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;;AAKA,QAAI;AACF,YAAMC,KAAK,CAACL,GAAD,EAAM;AACfM,QAAAA,MAAM,EAAE,MADO;AAEfC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFS;AAGfS,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHM,OAAN,CAAX;AAOD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdb,MAAAA,OAAO,CAACa,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD;AACF,GAnBD;;AAqBA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,QAAQ,EAAEnB,YAAY,CAACI,QAAD,CAFxB;AAGE,IAAA,EAAE,EAAE;AAAEgB,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,EAAE,EAAE,CAAxB;AAA2BC,MAAAA,EAAE,EAAE;AAA/B,KAHN;AAAA,2BAKE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,EAAE,EAAE;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAhC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,KAAK,EAAC,gBAHR;AAAA,aAIMrB,QAAQ,CAAC,SAAD,EAAY,EAAZ;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGG,MAAM,CAACS,OAAP,iBACC,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAEY,YAAAA,KAAK,EAAE;AAAT,WAAnB;AAAA,2BACKrB,MAAM,CAACS,OAAP,CAAea,OAAf,GAAwB,IAAxB,GAA+B,KADpC;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,WAA9B;AAA0C,QAAA,EAAE,EAAE;AAAEH,UAAAA,EAAE,EAAE,CAAN;AAASI,UAAAA,EAAE,EAAE;AAAb,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAtDe3B,S;UAKVF,O;;;KALUE,S","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Box,\n  Grid,\n  TextField,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { Review } from \"../../Types/Types\";\nimport { addReviewSchema } from \"../../validations/addReviewValidation\";\n\nexport function AddReview() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Review>({ resolver: yupResolver(addReviewSchema) });\n\n  const onSubmit = async (values: any) => {\n    console.log(\"Hello\");\n    const url = \"http://localhost:7063/api/addreview\";\n    const data = {\n      user: \"Gheorghe\",\n      content: values.content,\n      movieId: 1,\n    };\n    try {\n      await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit(onSubmit)}\n      sx={{ display: \"block\", mt: 4, mb: 4 }}\n    >\n      <Grid container spacing={2} sx={{ display: \"block\" }}>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            id=\"Content\"\n            label=\"Review content\"\n            {...register(\"content\", {})}\n          />\n          {errors.content && (\n            <Typography style={{ color: \"#F95252\" }}>\n              * {errors.content.message? true : false}\n            </Typography>\n          )}\n        </Grid>\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, ml: 2 }}>\n          Add review\n        </Button>\n      </Grid>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}