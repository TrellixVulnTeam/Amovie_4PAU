{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useFetch(url) {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  async function fetchPosts() {\n    const response = await fetch(url);\n    setLoading(false);\n    var result;\n\n    if (isJson(response)) {\n      result = await response.json();\n    }\n\n    if (response.status === 404) {\n      result = {\n        error404: \"Resourse not found\"\n      };\n    } else {\n      result = result || {\n        error: \"Somthing went wrong\"\n      };\n    }\n\n    if (response.status >= 200 && response.status < 300) {\n      setData(result);\n    } else {\n      setError(result);\n    }\n  }\n\n  fetchPosts();\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\n_s(useFetch, \"3ecZsCYHHXBSzmS6pSxHlFpkn6w=\");\n\nfunction isJson(response) {\n  var _response$headers$get;\n\n  return (_response$headers$get = response.headers.get(\"Content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"json\");\n}","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/hooks/useFetch.tsx"],"names":["useState","useFetch","url","data","setData","loading","setLoading","error","setError","fetchPosts","response","fetch","result","isJson","json","status","error404","headers","get","includes"],"mappings":";;AAAA,SAA4BA,QAA5B,QAA4C,OAA5C;AAEA,eAAe,SAASC,QAAT,CAA+BC,GAA/B,EAA4C;AAAA;;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAW,IAAX,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEE,iBAAeS,UAAf,GAA4B;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAD,CAA5B;AACAI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,QAAIM,MAAJ;;AACA,QAAIC,MAAM,CAACH,QAAD,CAAV,EAAsB;AACpBE,MAAAA,MAAM,GAAG,MAAMF,QAAQ,CAACI,IAAT,EAAf;AACD;;AACD,QAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AAC3BH,MAAAA,MAAM,GAAG;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAAT;AACD,KAFD,MAEO;AACLJ,MAAAA,MAAM,GAAGA,MAAM,IAAI;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAnB;AACD;;AAED,QAAIG,QAAQ,CAACK,MAAT,IAAmB,GAAnB,IAA0BL,QAAQ,CAACK,MAAT,GAAkB,GAAhD,EAAqD;AACnDX,MAAAA,OAAO,CAACQ,MAAD,CAAP;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD;AACF;;AACDH,EAAAA,UAAU;AAEZ,SAAO;AAAEN,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD;;GA3BuBN,Q;;AA6BxB,SAASY,MAAT,CAAgBH,QAAhB,EAAoC;AAAA;;AAClC,kCAAOA,QAAQ,CAACO,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAP,0DAAO,sBAAsCC,QAAtC,CAA+C,MAA/C,CAAP;AACD","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport default function useFetch<T = unknown>(url: string) {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n    async function fetchPosts() {\n      const response = await fetch(url);\n      setLoading(false);\n      var result;\n      if (isJson(response)) {\n        result = await response.json();\n      }\n      if (response.status === 404) {\n        result = { error404: \"Resourse not found\" };\n      } else {\n        result = result || { error: \"Somthing went wrong\" };\n      }\n\n      if (response.status >= 200 && response.status < 300) {\n        setData(result);\n      } else {\n        setError(result);\n      }\n    }\n    fetchPosts();\n\n  return { data, loading, error };\n}\n\nfunction isJson(response: Response) {\n  return response.headers.get(\"Content-type\")?.includes(\"json\");\n}\n"]},"metadata":{},"sourceType":"module"}