{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\AddNews.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container, Grid, TextField, Typography, Box, Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport useFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNews() {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(addNewsSchema)\n  });\n\n  const onSubmit = async values => {\n    const url = \"http://localhost:7063/addnews\";\n    const data = {\n      title: values.title,\n      image: values.image[0].name,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId\n    };\n    console.log(data);\n\n    try {\n      await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/news\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  const url = `http://localhost:7063/api/Author/allauthors`;\n  const {\n    data: authors,\n    error,\n    loading\n  } = useFetch(url);\n  {\n    authors && authors.map(author => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: author.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      sx: {\n        display: \"block\",\n        mt: 4,\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          display: \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"title\",\n            label: \"News title\",\n            ...register(\"title\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.title.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"content\",\n            multiline: true,\n            minRows: 3,\n            label: \"News content\",\n            ...register(\"content\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.content.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"file\",\n            ...register(\"image\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"choose-file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), errors.image && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.image.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"News Date\",\n              value: dateValue,\n              onChange: newValue => {\n                setDateValue(newValue);\n              },\n              renderInput: register => /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                ...register,\n                name: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), errors.date && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.date.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              variant: \"standard\",\n              htmlFor: \"uncontrolled-native\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n              defaultValue: 30,\n              ...register(\"authorId\"),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"One\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"Two\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 3,\n                children: \"Three\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), errors.authorId && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.authorId.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            ml: 2\n          },\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNews, \"H3F3CgRC7gNCIBugnHjRRC8Vu2g=\", false, function () {\n  return [useForm, useFetch];\n});\n\n_c = AddNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/AddNews.tsx"],"names":["yupResolver","Container","Grid","TextField","Typography","Box","Button","useState","useForm","Redirect","addNewsSchema","AdapterDateFns","LocalizationProvider","DatePicker","moment","InputLabel","FormControl","NativeSelect","useFetch","AddNews","redirect","setRedirect","dateValue","setDateValue","register","handleSubmit","formState","errors","resolver","onSubmit","values","url","data","title","image","name","content","date","format","authorId","console","log","fetch","method","body","JSON","stringify","headers","error","authors","loading","map","author","firstName","display","mt","mb","color","message","newValue","ml"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Container,\n  Grid,\n  TextField,\n  Typography,\n  Box,\n  Button,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { addNewsSchema } from \"../validations/addNewsValidation\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport useFetch from \"../hooks/useFetch\";\n\ntype NewsType = {\n  title: string;\n  image: string;\n  content: string;\n  date: string;\n  authorId: number;\n};\n\ntype AuthorType = {\n  id: number;\n  firstName: string;\n  lastName: string;\n};\n\nexport default function AddNews() {\n  const [redirect, setRedirect] = useState(false);\n  const [dateValue, setDateValue] = useState<Date | null>(null);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<NewsType>({ resolver: yupResolver(addNewsSchema) });\n\n  const onSubmit = async (values: any) => {\n    const url = \"http://localhost:7063/addnews\";\n    const data = {\n      title: values.title,\n      image: values.image[0].name,\n      content: values.content,\n      date: moment(dateValue).format(\"YYYY-MM-DD\"),\n      authorId: values.authorId,\n    };\n    console.log(data);\n\n    try {\n      await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/news\" />;\n  }\n\n  const url = `http://localhost:7063/api/Author/allauthors`;\n  const { data : authors, error, loading } = useFetch<AuthorType>(url);\n  {authors && authors.map((author) => (\n      <div>\n        <p>{author.firstName}</p>\n      </div>\n    ))}\n\n\n  return (\n    <Container>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(onSubmit)}\n        sx={{ display: \"block\", mt: 4, mb: 4 }}\n      >\n        <Grid container spacing={2} sx={{ display: \"block\" }}>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"title\"\n              label=\"News title\"\n              {...register(\"title\", {})}\n            />\n            {errors.title && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.title.message}\n              </Typography>\n            )}\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"content\"\n              multiline\n              minRows={3}\n              label=\"News content\"\n              {...register(\"content\", {})}\n            />\n            {errors.content && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.content.message}\n              </Typography>\n            )}\n          </Grid>\n\n          <Grid item xs={6} md={3}>\n            <TextField fullWidth type=\"file\" {...register(\"image\")}></TextField>\n            <label htmlFor=\"choose-file\"></label>\n            {errors.image && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.image.message}\n              </Typography>\n            )}\n          </Grid>\n\n          <Grid item xs={6} md={3}>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label=\"News Date\"\n                value={dateValue}\n                onChange={(newValue) => {\n                  setDateValue(newValue);\n                }}\n                renderInput={(register) => (\n                  <TextField fullWidth {...register} name=\"date\" />\n                )}\n              />\n            </LocalizationProvider>\n            {errors.date && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.date.message}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={6}>\n            {/* <select {...register(\"authorId\")}>\n              <option value=\"1\">One</option>\n              <option value=\"2\">Twho</option>\n              <option value=\"2\">Three</option>\n            </select> */}\n            <FormControl fullWidth>\n              <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\n                Age\n              </InputLabel>\n              <NativeSelect defaultValue={30} {...register(\"authorId\")}>\n                <option value={1}>One</option>\n                <option value={2}>Two</option>\n                <option value={3}>Three</option>\n              </NativeSelect>\n            </FormControl>\n            {errors.authorId && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.authorId.message}\n              </Typography>\n            )}\n          </Grid>\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, ml: 2 }}>\n            Save changes\n          </Button>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}