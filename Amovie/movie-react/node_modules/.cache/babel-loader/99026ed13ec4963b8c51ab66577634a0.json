{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Button, Grid, TextField, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Container from \"@mui/material/Container\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookForm/resolvers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  name: yup.string().required(\"Name is required\").min(3, \"Name must containt at least 3 characters\").max(20, \"Name must contain at most 20 characters\"),\n  mail: yup.string().required(\"Mail is required\").email(\"Invalid mail\"),\n  password: yup.string().required(\"Password is required\").min(6, \"Password must containt at least 6 characters\")\n});\nexport default function SignUp() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        marginBottom: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: \"primary.main\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        sx: {\n          fontWeight: \"bold\"\n        },\n        children: [\" \", \"Sign up\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit(onSubmit),\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"name\",\n              label: \"Name\",\n              ...register(\"name\", {// minLength: {\n                //   value: 3,\n                //   message: \"Name must containt at least 3 characters\",\n                // },\n                // maxLength: {\n                //   value: 20,\n                //   message: \"Name must contain at most 20 characters\",\n                // },\n                // required: \"Name is required\",\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              ...register(\"email\", {// required: \"Email is required\",\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Password\",\n              id: \"password\",\n              ...register(\"password\", {// required: \"Password is required\",\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: [\" \", \"Sign Up\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signin\",\n              children: \" Already have an account? Sign in \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/SignUp.tsx"],"names":["Avatar","Box","Button","Grid","TextField","Typography","Link","useForm","Container","yup","yupResolver","schema","object","name","string","required","min","max","mail","email","password","SignUp","register","handleSubmit","formState","errors","resolver","onSubmit","values","console","log","marginTop","marginBottom","display","flexDirection","alignItems","m","bgcolor","fontWeight","mt","message","mb"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Container from \"@mui/material/Container\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookForm/resolvers\";\n\ntype FormTypes = {\n  name: string;\n  email: string;\n  password: string;\n};\n\nconst schema = yup.object({\n  name: yup\n    .string()\n    .required(\"Name is required\")\n    .min(3, \"Name must containt at least 3 characters\")\n    .max(20, \"Name must contain at most 20 characters\"),\n  mail: yup.string().required(\"Mail is required\").email(\"Invalid mail\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Password must containt at least 6 characters\"),\n});\n\nexport default function SignUp() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormTypes>({ resolver: yupResolver(schema) });\n\n  const onSubmit = (values: FormTypes) => {\n    console.log(values);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          marginBottom: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}></Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ fontWeight: \"bold\" }}>\n          {\" \"}\n          Sign up{\" \"}\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                {...register(\"name\", {\n                  // minLength: {\n                  //   value: 3,\n                  //   message: \"Name must containt at least 3 characters\",\n                  // },\n                  // maxLength: {\n                  //   value: 20,\n                  //   message: \"Name must contain at most 20 characters\",\n                  // },\n                  // required: \"Name is required\",\n                })}\n              />\n              {errors.name && <p>{errors.name.message}</p>}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                {...register(\"email\", {\n                  // required: \"Email is required\",\n                })}\n              />\n              {errors.email && <p>{errors.email.message}</p>}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Password\"\n                id=\"password\"\n                {...register(\"password\", {\n                  // required: \"Password is required\",\n                })}\n              />\n              {errors.password && <p>{errors.password.message}</p>}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            {\" \"}\n            Sign Up{\" \"}\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signin\"> Already have an account? Sign in </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}