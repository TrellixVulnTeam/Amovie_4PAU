{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\NewsPagination.tsx\",\n    _s = $RefreshSig$();\n\nimport \"../styles/lastNews.scss\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { Pagination } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewsPagination() {\n  _s();\n\n  var _data;\n\n  useEffect(() => {\n    async function fetchPosts() {\n      const response = await fetch(url);\n      setLoading(false);\n      let result;\n\n      if (isJson(response)) {\n        result = await response.json();\n      }\n\n      if (response.status === 404) {\n        result = {\n          error404: 'Resourse not found'\n        };\n      } else {\n        result = result || {\n          error: \"Somthing went wrong\"\n        };\n      }\n\n      if (response.status >= 200 && response.status < 300) {\n        setData(result);\n      } else {\n        setError(result);\n      }\n    }\n\n    fetchPosts();\n  }, [url]);\n\n  function handleChange(event) {\n    console.log(event.currentTarget.textContent);\n  } // useEffect(() => {\n  //   const getNews = async () =>{\n  //   const res = await fetch(\n  //     `https://localhost:7063/newspage/${news?.currentPage}?pageSize=${5}`\n  //   );\n  //   const data = await res.json();\n  //   setItems(data);\n  //   console.log( data);\n  // };\n  // getNews();\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      count: 5,\n      defaultPage: 1,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blue-line\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), data && ((_data = data) === null || _data === void 0 ? void 0 : _data.news.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-block\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/news/${n.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-section\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: n.image,\n                alt: n.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title\",\n              children: n.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: n.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"BY \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: n.authorName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: moment(n.date).format(\"MMMM d Y\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, n.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewsPagination, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = NewsPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsPagination\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/NewsPagination.tsx"],"names":["moment","Link","Pagination","useEffect","NewsPagination","fetchPosts","response","fetch","url","setLoading","result","isJson","json","status","error404","error","setData","setError","handleChange","event","console","log","currentTarget","textContent","data","news","map","n","id","image","title","content","authorName","date","format"],"mappings":"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","sourcesContent":["import \"../styles/lastNews.scss\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../hooks/useFetch\";\nimport { Pagination } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\ntype NewsPage = {\n  pages: number;\n  currentPage: number;\n  news: News[];\n};\n\ntype News = {\n  id: number;\n  title: string;\n  image: string;\n  content: string;\n  date: string;\n  authorName: string;\n};\n\nexport default function NewsPagination() {\n  \n  useEffect(() =>{\n    async function fetchPosts(){\n      const response = await fetch(url);\n      setLoading(false);\n      let result;\n      if(isJson(response)){\n       result = await response.json();\n      }\n      if(response.status === 404){\n        result = {error404: 'Resourse not found'};\n      } else{\n        result = result || {error: \"Somthing went wrong\"};\n      }\n\n      if(response.status >= 200 && response.status < 300){\n        setData(result);\n      } else{\n        setError(result);\n      }\n    }\n    fetchPosts();\n  }, [url]);\n \nfunction handleChange(event:any){ \n  console.log(event.currentTarget.textContent);\n}\n\n// useEffect(() => {\n//   const getNews = async () =>{\n//   const res = await fetch(\n//     `https://localhost:7063/newspage/${news?.currentPage}?pageSize=${5}`\n//   );\n//   const data = await res.json();\n//   setItems(data);\n//   console.log( data);\n// };\n// getNews();\n// }, []);\n\n  return (\n\n    <div>\n      <Pagination count={5} defaultPage={1} onChange={handleChange} />\n    <div className=\"news-block\">\n      <div className=\"title-block\">\n        <p className=\"title\">News</p>\n        <div className=\"blue-line\">\n          <div> </div>\n        </div>\n      </div>\n      {/* {loading && <p>Loading data...</p>} */}\n      {data && \n          data?.news.map((n) => ( \n          <div className=\"container\" key={n.id}>\n            <div className=\"content-block\">\n              <Link to={`/news/${n.id}`}>\n                <div className=\"image-section\">\n                  <img src={n.image} alt={n.title} />\n                </div>\n              </Link>\n              <div className=\"text-section\">\n                <h2 className=\"title\">{n.title}</h2>\n                <p className=\"text\">{n.content}</p>\n                <div className=\"info\">\n                  <p>\n                    BY <span>{n.authorName}</span>\n                  </p>\n                  <p>{moment(n.date).format(\"MMMM d Y\")}</p>\n                </div>\n              </div>\n            </div>\n            <hr className=\"line\" />\n          </div>\n        ))}\n      {/* {error && JSON.stringify(error)} */}\n    </div>\n    </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}