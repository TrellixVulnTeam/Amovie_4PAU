{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function DeleteNews(id) {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const url = `http://localhost:7063/newspage/${page}?pageSize=${5}`;\n  const {\n    data,\n    error,\n    loading\n  } = useFetch(url); // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n\n  fetch(`http://localhost:7063/api/deletenews/${id}`, {\n    method: \"DELETE\"\n  }).then(async response => {\n    if (!response.ok) {\n      const error = response.status;\n      return Promise.reject(error);\n    }\n  }).catch(error => {\n    console.warn(\"There was an error!\", error);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(DeleteNews, \"HAd+C1tlaKMIf13LrHLUCnsRJoc=\", true);\n\n_c = DeleteNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteNews\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/DeleteNews.tsx"],"names":["DeleteNews","id","page","setPage","useState","url","data","error","loading","useFetch","fetch","method","then","response","ok","status","Promise","reject","catch","console","warn"],"mappings":";;;;AAEA,OAAO,eAAeA,UAAf,CAA0BC,EAA1B,EAAsC;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMC,GAAG,GAAI,kCAAiCH,IAAK,aAAY,CAAE,EAAjE;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BC,QAAQ,CAAWJ,GAAX,CAAzC,CAL2C,CAO3C;AACA;AACA;;AACEK,EAAAA,KAAK,CAAE,wCAAuCT,EAAG,EAA5C,EAA+C;AAClDU,IAAAA,MAAM,EAAE;AAD0C,GAA/C,CAAL,CAEGC,IAFH,CAEQ,MAAOC,QAAP,IAAoB;AACxB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAMP,KAAK,GAAIM,QAAQ,CAACE,MAAxB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeV,KAAf,CAAP;AACD;AACF,GAPH,EAQGW,KARH,CAQUX,KAAD,IAAW;AAChBY,IAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCb,KAApC;AACD,GAVH;AAWF,sBACE,qCADF;AAGD;;GAxBqBP,U;;KAAAA,U","sourcesContent":["import { useEffect } from \"react\";\n\nexport async function DeleteNews(id: number) {\n  const [page, setPage] = useState(1);\n\n  const url = `http://localhost:7063/newspage/${page}?pageSize=${5}`;\n\n  const { data, error, loading } = useFetch<NewsPage>(url);\n\n  // await fetch(`http://localhost:7063/api/deletenews/${id}`,{\n  //   method: 'DELETE'\n  // })\n    fetch(`http://localhost:7063/api/deletenews/${id}`, { \n      method: \"DELETE\" })\n      .then(async (response) => {\n        if (!response.ok) {\n          const error =  response.status;\n          return Promise.reject(error);\n        }\n      })\n      .catch((error) => {\n        console.warn(\"There was an error!\", error);\n      });\n  return(\n    <></>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}