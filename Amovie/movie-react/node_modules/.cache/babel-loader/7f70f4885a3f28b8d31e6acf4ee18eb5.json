{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\MovieComponent\\\\AddReview.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container, Box, Grid, TextField, Typography, Button } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { addNewsSchema } from \"../../validations/addNewsValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddReview() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(addNewsSchema)\n  });\n\n  const onSubmit = async values => {\n    const url = \"http://localhost:7063/addreview\";\n    const data = {\n      content: values.content,\n      authorId: values.authorId\n    };\n\n    try {\n      await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmit),\n      sx: {\n        display: \"block\",\n        mt: 4,\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          display: \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"Content\",\n            label: \"Review content\",\n            ...register(\"content\", {})\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#F95252\"\n            },\n            children: [\"* \", errors.content.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            ml: 2\n          },\n          children: \"Add review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddReview, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/MovieComponent/AddReview.tsx"],"names":["yupResolver","Container","Box","Grid","TextField","Typography","Button","useForm","addNewsSchema","AddReview","register","handleSubmit","formState","errors","resolver","onSubmit","values","url","data","content","authorId","fetch","method","body","JSON","stringify","headers","error","console","display","mt","mb","color","message","ml"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,yBAA5B;AACA,SACEC,SADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,UALF,EAMEC,MANF,QAOO,eAPP;AAQA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,aAAT,QAA8B,qCAA9B;;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAC1B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFN,OAAO,CAAS;AAAEO,IAAAA,QAAQ,EAAEd,WAAW,CAACQ,aAAD;AAAvB,GAAT,CAJX;;AAMA,QAAMO,QAAQ,GAAG,MAAOC,MAAP,IAAuB;AACtC,UAAMC,GAAG,GAAG,iCAAZ;AACA,UAAMC,IAAI,GAAG;AACXC,MAAAA,OAAO,EAAEH,MAAM,CAACG,OADL;AAEXC,MAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAFN,KAAb;;AAIA,QAAI;AACF,YAAMC,KAAK,CAACJ,GAAD,EAAM;AACfK,QAAAA,MAAM,EAAE,MADO;AAEfC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFS;AAGfQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHM,OAAN,CAAX;AAOD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD;AACF,GAjBD;;AAmBA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,QAAQ,EAAEhB,YAAY,CAACI,QAAD,CAFxB;AAGE,MAAA,EAAE,EAAE;AAAEc,QAAAA,OAAO,EAAE,OAAX;AAAoBC,QAAAA,EAAE,EAAE,CAAxB;AAA2BC,QAAAA,EAAE,EAAE;AAA/B,OAHN;AAAA,6BAKE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,EAAE,EAAE;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAhC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,EAAE,EAAC,SAFL;AAGE,YAAA,KAAK,EAAC,gBAHR;AAAA,eAIMnB,QAAQ,CAAC,SAAD,EAAY,EAAZ;AAJd;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGG,MAAM,CAACM,OAAP,iBACC,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAEa,cAAAA,KAAK,EAAE;AAAT,aAAnB;AAAA,6BACKnB,MAAM,CAACM,OAAP,CAAec,OADpB;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,WAA9B;AAA0C,UAAA,EAAE,EAAE;AAAEH,YAAAA,EAAE,EAAE,CAAN;AAASI,YAAAA,EAAE,EAAE;AAAb,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtDezB,S;UAKVF,O;;;KALUE,S","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Container,\n  Box,\n  Grid,\n  TextField,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { Review } from \"../../Types/Types\";\nimport { addNewsSchema } from \"../../validations/addNewsValidation\";\n\nexport function AddReview() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Review>({ resolver: yupResolver(addNewsSchema) });\n\n  const onSubmit = async (values: any) => {\n    const url = \"http://localhost:7063/addreview\";\n    const data = {\n      content: values.content,\n      authorId: values.authorId,\n    };\n    try {\n      await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <Container>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(onSubmit)}\n        sx={{ display: \"block\", mt: 4, mb: 4 }}\n      >\n        <Grid container spacing={2} sx={{ display: \"block\" }}>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              id=\"Content\"\n              label=\"Review content\"\n              {...register(\"content\", {})}\n            />\n            {errors.content && (\n              <Typography style={{ color: \"#F95252\" }}>\n                * {errors.content.message}\n              </Typography>\n            )}\n          </Grid>\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, ml: 2 }}>\n            Add review\n          </Button>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}