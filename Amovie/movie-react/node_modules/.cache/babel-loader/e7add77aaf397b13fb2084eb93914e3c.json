{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\SingIn.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport { Avatar, Box, Button, Grid, TextField, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { loginSchema } from \"../validations/loginValidation\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n  const {\n    user,\n    setUser\n  } = React.useContext(UserContext);\n  const methods = useForm({\n    resolver: yupResolver(loginSchema)\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = methods;\n\n  const onSubmit = async values => {\n    const url = \"http://localhost:7063/api/login\";\n    const data = {\n      email: values.email,\n      password: values.password\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      var result = await response.json();\n      console.log(\"Succes:\", JSON.stringify(result)); // console.log(result.user.name);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    function parseJwt(token) {\n      var base64Url = token.split('.')[1];\n      var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    }\n\n    ;\n    const jwtToken = result.jwt;\n    let prsedResult = parseJwt(jwtToken);\n    let name = prsedResult[1]; // setUser({ name: result.user.name });\n    // console.log(\"user\" + user?.name);\n\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        marginBottom: 8,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: \"primary.main\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        sx: {\n          fontWeight: \"bold\"\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit(onSubmit),\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              ...register(\"email\", {})\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: \"#F95252\"\n              },\n              children: [\"* \", errors.email.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Password\",\n              id: \"password1\",\n              type: \"password\",\n              ...register(\"password\", {})\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: \"#F95252\"\n              },\n              children: [\"* \", errors.password.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \" Don't have an account? Sign Up \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"tOyl9+4+3j3tfg7mxQ0gZCY3JDQ=\", false, function () {\n  return [useForm];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/SingIn.tsx"],"names":["React","Container","Avatar","Box","Button","Grid","TextField","Typography","Link","useForm","yupResolver","loginSchema","useState","Redirect","UserContext","SignIn","redirect","setRedirect","user","setUser","useContext","methods","resolver","register","handleSubmit","formState","errors","onSubmit","values","url","data","email","password","response","fetch","method","body","JSON","stringify","headers","credentials","result","json","console","log","error","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse","jwtToken","jwt","prsedResult","name","marginTop","marginBottom","display","flexDirection","alignItems","m","bgcolor","fontWeight","mt","color","message","mb"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,UANF,QAOO,eAPP;AAQA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBnB,KAAK,CAACoB,UAAN,CAAiBN,WAAjB,CAA1B;AAOA,QAAMO,OAAO,GAAGZ,OAAO,CAAY;AAAEa,IAAAA,QAAQ,EAAEZ,WAAW,CAACC,WAAD;AAAvB,GAAZ,CAAvB;AAEA,QAAM;AACJY,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAHP,MAIFL,OAJJ;;AAMA,QAAMM,QAAQ,GAAG,MAAOC,MAAP,IAA6B;AAC5C,UAAMC,GAAG,GAAG,iCAAZ;AACA,UAAMC,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEH,MAAM,CAACG,KADH;AAEXC,MAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAFN,KAAb;;AAKA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCM,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAF0B;AAGhCS,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAHuB;AAMhCC,QAAAA,WAAW,EAAE;AANmB,OAAN,CAA5B;AAQA,UAAIC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,IAAI,CAACC,SAAL,CAAeG,MAAf,CAAvB,EAVE,CAWF;AACD,KAZD,CAYE,OAAOI,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD;;AAED,aAASC,QAAT,CAAmBC,KAAnB,EAA8B;AAC5B,UAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,UAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAb;AACA,UAAIC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAD,CAAJ,CAAaD,KAAb,CAAmB,EAAnB,EAAuBM,GAAvB,CAA2B,UAASC,CAAT,EAAY;AACxE,eAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,OAFoC,EAElCC,IAFkC,CAE7B,EAF6B,CAAD,CAApC;AAIA,aAAOvB,IAAI,CAACwB,KAAL,CAAWT,WAAX,CAAP;AACH;;AAAA;AAEC,UAAMU,QAAQ,GAAGrB,MAAM,CAACsB,GAAxB;AACA,QAAIC,WAAW,GAAGlB,QAAQ,CAACgB,QAAD,CAA1B;AAEA,QAAIG,IAAI,GAAGD,WAAW,CAAC,CAAD,CAAtB,CApC4C,CAuC5C;AACA;;AACA/C,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GA1CD;;AA4CA,MAAID,QAAJ,EAAc;AACZ,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFkD,QAAAA,SAAS,EAAE,CADT;AAEFC,QAAAA,YAAY,EAAE,CAFZ;AAGFC,QAAAA,OAAO,EAAE,MAHP;AAIFC,QAAAA,aAAa,EAAE,QAJb;AAKFC,QAAAA,UAAU,EAAE;AALV,OADN;AAAA,8BASE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,OAAO,EAAE;AAAjB;AAAZ;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAwC,QAAA,EAAE,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,QAAQ,EAAEjD,YAAY,CAACG,QAAD,CAA5C;AAAwD,QAAA,EAAE,EAAE;AAAE+C,UAAAA,EAAE,EAAE;AAAN,SAA5D;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,EAAE,EAAC,OAFL;AAGE,cAAA,KAAK,EAAC,eAHR;AAAA,iBAIMnD,QAAQ,CAAC,OAAD,EAAU,EAAV;AAJd;AAAA;AAAA;AAAA;AAAA,oBADF,EAOGG,MAAM,CAACK,KAAP,iBACC,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAE4C,gBAAAA,KAAK,EAAE;AAAT,eAAnB;AAAA,+BACKjD,MAAM,CAACK,KAAP,CAAa6C,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,KAAK,EAAC,UAFR;AAGE,cAAA,EAAE,EAAC,WAHL;AAIE,cAAA,IAAI,EAAC,UAJP;AAAA,iBAKMrD,QAAQ,CAAC,UAAD,EAAa,EAAb;AALd;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGG,MAAM,CAACM,QAAP,iBACC,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAE2C,gBAAAA,KAAK,EAAE;AAAT,eAAnB;AAAA,+BACKjD,MAAM,CAACM,QAAP,CAAgB4C,OADrB;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA8BE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,EAAE,EAAE;AAAEF,YAAAA,EAAE,EAAE,CAAN;AAASG,YAAAA,EAAE,EAAE;AAAb,WAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,eAsCE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,cAAc,EAAC,UAA/B;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD;;GA/HuB9D,M;UASNN,O;;;KATMM,M","sourcesContent":["import * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { loginSchema } from \"../validations/loginValidation\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport jwt_decode from \"jwt-decode\";\n\nexport default function SignIn() {\n  const [redirect, setRedirect] = useState(false);\n  const { user, setUser } = React.useContext(UserContext);\n\n  type LoginType = {\n    email: string;\n    password: string;\n  };\n\n  const methods = useForm<LoginType>({ resolver: yupResolver(loginSchema) });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = methods;\n\n  const onSubmit = async (values: LoginType) => {\n    const url = \"http://localhost:7063/api/login\";\n    const data = {\n      email: values.email,\n      password: values.password,\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n      });\n      var result = await response.json();\n      console.log(\"Succes:\", JSON.stringify(result));\n      // console.log(result.user.name);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    function parseJwt (token:any) {\n      var base64Url = token.split('.')[1];\n      var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n  \n      return JSON.parse(jsonPayload);\n  };\n\n    const jwtToken = result.jwt;\n    let prsedResult = parseJwt(jwtToken);\n\n    let name = prsedResult[1];\n\n\n    // setUser({ name: result.user.name });\n    // console.log(\"user\" + user?.name);\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          marginBottom: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}></Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ fontWeight: \"bold\" }}>\n          Sign In\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                {...register(\"email\", {})}\n              />\n              {errors.email && (\n                <Typography style={{ color: \"#F95252\" }}>\n                  * {errors.email.message}\n                </Typography>\n              )}\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Password\"\n                id=\"password1\"\n                type=\"password\"\n                {...register(\"password\", {})}\n              />\n              {errors.password && (\n                <Typography style={{ color: \"#F95252\" }}>\n                  * {errors.password.message}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/signup\"> Don't have an account? Sign Up </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}