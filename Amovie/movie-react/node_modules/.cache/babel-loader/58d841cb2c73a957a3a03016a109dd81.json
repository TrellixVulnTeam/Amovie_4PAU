{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amovie\\\\Amovie\\\\movie-react\\\\src\\\\components\\\\MovieComponent\\\\AllMovies.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useFetch from \"../../hooks/useFetch\";\nimport \"../../styles/movies.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllMovies() {\n  _s();\n\n  const [page, setPage] = useState(1); // const [movies, setMovies] = useState(null);\n\n  const url = `http://localhost:7063/pagedmovies/${page}?pageSize=${12}`;\n  const {\n    data,\n    error,\n    loading\n  } = useFetch(url);\n  console.log(data); // useEffect(() => {\n  //   const fetchPost = async () => {\n  //     const response = await fetch(url);\n  //     const data = await response.json();\n  //     setMovies(data);\n  //   };\n  //   fetchPost();\n  // }, []);\n  // console.log(movies);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blue-line\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllMovies, \"9hQ1v7vLQd7bjrA810+1bGETDKc=\", false, function () {\n  return [useFetch];\n});\n\n_c = AllMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMovies\");","map":{"version":3,"sources":["D:/Amovie/Amovie/movie-react/src/components/MovieComponent/AllMovies.tsx"],"names":["useState","useFetch","AllMovies","page","setPage","url","data","error","loading","console","log"],"mappings":";;;AACA,SAAoBA,QAApB,QAAoC,OAApC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,0BAAP;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC,CADkC,CAElC;;AACA,QAAMK,GAAG,GAAI,qCAAoCF,IAAK,aAAY,EAAG,EAArE;AACA,QAAM;AACJG,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA;AAHI,MAIFP,QAAQ,CAAeI,GAAf,CAJZ;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EATkC,CAWlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GAtEuBJ,S;UAQlBD,Q;;;KARkBC,S","sourcesContent":["import moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch\";\nimport \"../../styles/movies.scss\";\nimport { MoviesPage } from \"../../Types/Types\";\n\nexport default function AllMovies() {\n  const [page, setPage] = useState(1);\n  // const [movies, setMovies] = useState(null);\n  const url = `http://localhost:7063/pagedmovies/${page}?pageSize=${12}`;\n  const {\n    data,\n    error,\n    loading\n  } = useFetch<MoviesPage[]>(url);\n  console.log(data);\n\n  // useEffect(() => {\n  //   const fetchPost = async () => {\n  //     const response = await fetch(url);\n  //     const data = await response.json();\n  //     setMovies(data);\n  //   };\n  //   fetchPost();\n  // }, []);\n  // console.log(movies);\n  \n  return (\n    <div className=\"container\">\n      <div className=\"movies-title\">\n        <div className=\"title-block\">\n          <p className=\"title\">Movies</p>\n          <div className=\"blue-line\">\n            <div> </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"movies-container\">\n        {loading && <p>Loading data...</p>}\n        {data &&\n          data?.movies?.map((movie) => (\n            <div className=\"movie\" key={movie.id}>\n              <div className=\"image\">\n                <Link to={`/movies/${movie.id}`}>\n                  <img src={`./images/${movie.image}`} alt=\"movie img\" />\n                </Link>\n              </div>\n              <div className=\"content\">\n                <div className=\"title-rating\">\n                  <h2>{movie.title}</h2>\n                </div>\n                <div className=\"date\">\n                  <div>\n                    <span className=\"dot\"></span>\n                    <p>{moment(movie.release).format(\"YYYY\")}</p>\n                  </div>\n                  <div>\n                    <span className=\"dot\"></span>\n                    <p>{movie.duration} min</p>\n                  </div>\n                  <div>\n                    <span className=\"dot\"></span>\n                    <p>\n                      {\" \"}\n                      IMDb <span>{movie.rating}</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        {error && JSON.stringify(error)}\n      </div> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}